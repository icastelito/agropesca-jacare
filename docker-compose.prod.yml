# Docker Compose para Produção
# SEM banco de dados (usa PostgreSQL do Railway)
# Otimizado para deploy

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: agropesca_app_prod
    restart: always
    ports:
      - "${PORT:-8080}:8080"
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_KEY=${APP_KEY}
      - APP_URL=${APP_URL}
      
      # Database (Railway PostgreSQL)
      - DB_CONNECTION=pgsql
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-5432}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      
      # Cache
      - CACHE_DRIVER=${CACHE_DRIVER:-file}
      - SESSION_DRIVER=${SESSION_DRIVER:-file}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION:-sync}
      
      # Mail
      - MAIL_MAILER=${MAIL_MAILER}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_ENCRYPTION=${MAIL_ENCRYPTION}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
      
      # Logging
      - LOG_CHANNEL=stack
      - LOG_LEVEL=error
    volumes:
      - storage_data:/var/www/html/storage
      - cache_data:/var/www/html/bootstrap/cache
    networks:
      - agropesca_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: >
      sh -c "
        php artisan config:cache &&
        php artisan route:cache &&
        php artisan view:cache &&
        php artisan migrate --force &&
        /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf
      "

volumes:
  storage_data:
    driver: local
  cache_data:
    driver: local

networks:
  agropesca_network:
    driver: bridge
